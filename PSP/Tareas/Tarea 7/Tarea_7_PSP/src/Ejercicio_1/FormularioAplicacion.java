/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ejercicio_1;

import java.awt.GraphicsConfiguration;
import java.io.*;
import static java.lang.System.gc;
import java.security.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.*;

/**
 *
 * @author Pauda
 */
public class FormularioAplicacion extends javax.swing.JFrame {

    String usuario;
    String password;

    public FormularioAplicacion(String usuario, String pwd) throws NoSuchAlgorithmException {
        initComponents();
        etiquetaUsuario.setText(usuario);
        this.usuario = usuario;
        this.password = pwd;
//        generarClaveSercreta(usuario, pwd);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        botonMostrarEncriptado = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        botonGuardarFichero = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        etiquetaUsuario = new javax.swing.JLabel();
        botonMostrarDesencrip = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        cuadroIntroText = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        jScrollPane1.setViewportView(areaTexto);

        botonMostrarEncriptado.setText("Mostrar Fichero Encriptado");
        botonMostrarEncriptado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMostrarEncriptadoActionPerformed(evt);
            }
        });

        jLabel1.setText("Introducir el texto a encriptar:");

        botonGuardarFichero.setText("Guardar Fichero Encriptado");
        botonGuardarFichero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGuardarFicheroActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("BIENVENIDO ");

        etiquetaUsuario.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        etiquetaUsuario.setText("jLabel3");

        botonMostrarDesencrip.setText("Mostrar Fichero Desencriptado");

        cuadroIntroText.setColumns(20);
        cuadroIntroText.setRows(5);
        jScrollPane2.setViewportView(cuadroIntroText);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(botonMostrarEncriptado, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(botonMostrarDesencrip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(etiquetaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(botonGuardarFichero))))
                        .addGap(0, 17, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(etiquetaUsuario))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(botonGuardarFichero)
                                .addGap(119, 119, 119))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonMostrarEncriptado)
                    .addComponent(botonMostrarDesencrip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonMostrarEncriptadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMostrarEncriptadoActionPerformed
//        areaTexto.setText(cuadroIntroText.getText());
        File ficheroCifrado = new File("fichero.cifrado");
        try {
            FileReader fis = new FileReader(ficheroCifrado);
            BufferedReader bis = new BufferedReader(fis);
            String linea;
            while ((linea = bis.readLine()) != null) {
                areaTexto.setText(linea);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_botonMostrarEncriptadoActionPerformed

    private void botonGuardarFicheroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGuardarFicheroActionPerformed

        try {
            File file = new File("fichero");
            FileInputStream fe = null; //fichero de entrada
            FileOutputStream fsc = null; //fichero de salida cifrado
            FileOutputStream fs = null; //fichero de salida normal
            int bytesLeidos;
            String cadena = "";

//1. Crear e inicializar clave
            SecretKey clave = generarClaveSercreta(usuario, password);

//Se Crea el objeto Cipher para cifrar, utilizando el algoritmo DES
            Cipher cifrador = Cipher.getInstance("AES/ECB/PKCS5Padding");
//Se inicializa el cifrador en modo CIFRADO o ENCRIPTACIÃ“N
            cifrador.init(Cipher.ENCRYPT_MODE, clave);
            System.out.println("2.- Cifrar con AES el fichero: " + file
                    + ", y dejar resultado en " + file + ".cifrado");
//Guardamos texto introducido en fichero
            byte[] bufferIn; //array de bytes            
            bufferIn = cuadroIntroText.getText().getBytes();
            fs = new FileOutputStream(file); //fichero de salida
            fs.write(bufferIn); //Graba el texto introducido en fichero

//declaraciÃ³n  de objetos
            byte[] bufferOut = new byte[1000]; //array de bytes
            byte[] bufferCifrado;
            fe = new FileInputStream(file); //objeto fichero de entrada
            fs = new FileOutputStream(file + ".cifrado"); //fichero de salida
//lee el fichero de 1k en 1k y pasa los fragmentos leidos al cifrador
            bytesLeidos = fe.read(bufferOut, 0, 1000);
            while (bytesLeidos != -1) {//mientras no se llegue al final del fichero
                //pasa texto claro al cifrador y lo cifra, asignÃ¡ndolo a bufferCifrado
                bufferCifrado = cifrador.update(bufferOut, 0, bytesLeidos);
                fs.write(bufferCifrado); //Graba el texto cifrado en fichero
                bytesLeidos = fe.read(bufferOut, 0, 1000);
                System.out.println(bufferCifrado);
                cadena = new String(bufferCifrado, "UTF-8");
                System.out.print(cadena);
            }
            bufferCifrado = cifrador.doFinal(); //Completa el cifrado
            cadena = new String(bufferCifrado, "UTF-8");
            System.out.print(cadena);
            fs.write(bufferCifrado); //Graba el final del texto cifrado, si lo hay
//Cierra ficheros
            fe.close();
            fs.close();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchPaddingException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvalidKeyException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalBlockSizeException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BadPaddingException ex) {
            Logger.getLogger(FormularioAplicacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_botonGuardarFicheroActionPerformed

    public SecretKey generarClaveSercreta(String usuario, String pwd) throws NoSuchAlgorithmException {
//        System.out.println("Generando clave AES...");
//KeyGenerator generador = KeyGenerator.getInstance("AES");
//generador.init(128);
//Key claveAES = generador.generateKey();
//System.out.println("Formato: "+claveAES.getFormat());
// creating the object of SecureRandom
        KeyGenerator generador = KeyGenerator.getInstance("AES");
        SecureRandom sr = new SecureRandom();

        // Declaring the string variable
        String cadena = usuario + pwd;

        // Declaring the byte Array b
        byte[] b = cadena.getBytes();

        // Reseeding the random object
        sr.setSeed(b);

        generador.init(128, sr);
        SecretKey claveAES = generador.generateKey();
        System.out.println("Formato: " + claveAES.getFormat());
        System.out.println("Clave");
        mostrarBytes(claveAES.getEncoded());
        return claveAES;
    }

    public static void mostrarBytes(byte[] buffer) {
        System.out.write(buffer, 0, buffer.length);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JButton botonGuardarFichero;
    private javax.swing.JButton botonMostrarDesencrip;
    private javax.swing.JButton botonMostrarEncriptado;
    private javax.swing.JTextArea cuadroIntroText;
    private javax.swing.JLabel etiquetaUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
