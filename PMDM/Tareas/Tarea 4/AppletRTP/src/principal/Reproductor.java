/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package principal;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.ActionListener;
import java.io.*;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.media.CannotRealizeException;
import javax.media.Codec;
import javax.media.Format;
import javax.media.Manager;
import javax.media.NoPlayerException;
import javax.media.Player;
import javax.media.PlugInManager;
import javax.media.format.AudioFormat;
import javax.swing.JFileChooser;
import javax.swing.JSlider;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionListener;
import static sun.audio.AudioPlayer.player;

/**
 *
 * @author DANILOR
 */
public class Reproductor extends javax.swing.JFrame implements ChangeListener{

    URL url;
    Player reproductor;

    /**
     * Creates new form TransmisorRTP
     */
    public Reproductor() {
        initComponents();
        jSlider1.addChangeListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonReproducir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jPanelReproductor = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemAbrir = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButtonReproducir.setText("Reproducir");
        jButtonReproducir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReproducirActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jTextArea1.setRows(1);
        jTextArea1.setTabSize(1);
        jTextArea1.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Nombre del fichero");

        jPanelReproductor.setPreferredSize(new java.awt.Dimension(354, 25));

        javax.swing.GroupLayout jPanelReproductorLayout = new javax.swing.GroupLayout(jPanelReproductor);
        jPanelReproductor.setLayout(jPanelReproductorLayout);
        jPanelReproductorLayout.setHorizontalGroup(
            jPanelReproductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelReproductorLayout.setVerticalGroup(
            jPanelReproductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 25, Short.MAX_VALUE)
        );

        jSlider1.setMaximum(60);
        jSlider1.setValue(30);

        jMenu1.setText("Archivo");

        jMenuItemAbrir.setText("Abrir");
        jMenuItemAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAbrirActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAbrir);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Salir");
        jMenu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu2ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelReproductor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonReproducir, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanelReproductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonReproducir)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonReproducirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReproducirActionPerformed
        try {
            /* Esta es la direccion del codec que decodifica los mp3 */
            String jffmpegAudioDecoder = "net.sourceforge.jffmpeg.AudioDecoder";
            /* Cargamos el codec y lo guardamos en un objeto de tipo Codec */
            Codec codecAudio = (Codec) Class.forName(jffmpegAudioDecoder).newInstance();
            /* Agregamos los codec al PlugInManager */
            PlugInManager.addPlugIn(jffmpegAudioDecoder,
                    codecAudio.getSupportedInputFormats(),
                    new Format[]{new AudioFormat("LINEAR")},
                    PlugInManager.CODEC);
            
            Manager.setHint( Manager.LIGHTWEIGHT_RENDERER, true );
             reproductor = Manager.createRealizedPlayer(url);
            
//             jPanelReproductor.setPreferredSize(jPanelReproductor.getMaximumSize());
            Component control = reproductor.getControlPanelComponent();

            
            control.setSize(jPanelReproductor.getPreferredSize());
             jPanelReproductor.add(control, BorderLayout.CENTER);
//             jPanelReproductor.setSize(300, 300);
//             jPanelReproductor.setVisible(true);
////            this.add(jPanelReproductor);
//            reproductor.realize();
            reproductor.start();
           
            
        } catch (IOException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoPlayerException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        } catch (CannotRealizeException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonReproducirActionPerformed

    private void jMenuItemAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAbrirActionPerformed
        try {
            JFileChooser jfc = new JFileChooser();
            jfc.showOpenDialog(jfc);
            File fichero = jfc.getSelectedFile();

            jTextArea1.setText(fichero.getAbsolutePath());

            url = new URL("file", null, fichero.getAbsolutePath());
        } catch (MalformedURLException ex) {
            Logger.getLogger(Reproductor.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jMenuItemAbrirActionPerformed

    private void jMenu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenu2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reproductor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reproductor().setVisible(true);
            }
        });
    }

    
    //metodos de la barras de volumen y tiempo
 
 public void moverBarra(final JSlider slider){
  Timer tiempo = new Timer();
  int velocidad = 1000;
  
  
  TimerTask tarea = new TimerTask(){
   public void run(){
    int cuadro = (int) Math.round(reproductor.getMediaTime().getSeconds()*100 / reproductor.getDuration().getSeconds());
//    if(reproductor.getMediaTime().getSeconds()==reproductor.getDuration().getSeconds()||!reproduciendo){
//     cuadro = 100;          
//     stop();
//    }else{
     slider.setValue(cuadro);
//    }
   String tiempo = getTiempo();
   slider.setToolTipText(tiempo);
   }
  };
  tiempo.schedule(tarea, 0, velocidad);
 }
    
 
// public void pararBarra(final JSlider slider){
//  if(reproduciendo){
//  tarea.cancel();
//  tiempo.cancel();
//  }
// }
 
 public float getVolumen(){
  return reproductor.getGainControl().getLevel();
  
 }
 
 public void setVolumen(float volumen){
  reproductor.getGainControl().setLevel(volumen/100f);
 }
 
 public String getDuracion(){
  String cad="";
  double segundos = reproductor.getDuration().getSeconds();
  int minutos = (int) (segundos / 60);
  for(int i=0;i<minutos;i++){
   segundos = segundos - 60;
  }
  int segundosAux =(int) (segundos);
  if(minutos<10)cad += "0";
  cad+=minutos+":";
  if(segundosAux<10)cad += "0";
  cad+=segundosAux;
  return cad;
 }
 
 public String getTiempo(){
  String cad="";
  double segundos = reproductor.getMediaTime().getSeconds();
  int minutos = (int) (segundos / 60);
  for(int i=0;i<minutos;i++){
   segundos = segundos - 60;
  }
  int segundosAux =(int) (segundos);
  if(minutos<10)cad += "0";
  cad+=minutos+":";
  if(segundosAux<10)cad += "0";
  cad+=segundosAux;
  return cad;
 }
 
 //metodo que se ejecuta al hacer clic en un item del JList
 
 @Override
 public void stateChanged(ChangeEvent event) {
  if(event.getSource()==jSlider1){
   float volumen = jSlider1.getValue();
   this.setVolumen(volumen);
  }
 }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonReproducir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAbrir;
    private javax.swing.JPanel jPanelReproductor;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
